#include "main.h"
#include <stdio.h>

// Prototypy funkcji
void WAIT_10US(unsigned int wait);
void INWERSJAP1_6();

unsigned char xdata PTWY _at_ 0x8008; // Rejestr portu sterujacego diodami L0-L7
unsigned char Licznik;
unsigned char xdata POT1_ADC _at_ 0x8006; // POT1 jako wejscie ADC

void main(void) {
    unsigned int delay_ms = 0; // Zmienna przechowujaca czas opóznienia
    unsigned int delay_counter = 0; // Licznik do odmierzania czasu
    unsigned char led_position = 0; // Pozycja diody na linijce
    char direction = 1; // Kierunek ruchu diody (1: w prawo, -1: w lewo)

    Licznik = 0;
    prglcd();

    // Ustawienie portu diodowego jako wyjscie
    PTWY = 0x00; // Wszystkie diody wygaszone
   
    while(1) {
        WAIT_10US(25000U);
        INWERSJAP1_6();
       
        // Odczyt wartosci z potencjometra POT1
        POT1_ADC = 0x00; // Ustawienie kanalu ADC na POT1
        WAIT_10US(50); // Oczekiwanie na ustabilizowanie sie sygnalu
       
        // Skalowanie odczytanej wartosci do zakresu opóznien
        delay_ms = POT1_ADC * 20 / 255; // Skalowanie do zakresu od 0 do 20 ms
       
        // Inkrementacja licznika
        delay_counter++;
       
        // Sprawdzenie, czy uplynal czas opóznienia
        if (delay_counter >= delay_ms) {
            // Zresetowanie licznika
            delay_counter = 0;
           
            // Przesuniecie diody na linijce diodowej
            led_position += direction;
           
            // Sprawdzenie, czy dioda osiagnela skrajne pozycje
            if (led_position == 7) {
                direction = -1; // Zmiana kierunku na lewo
            } else if (led_position == 0) {
                direction = 1; // Zmiana kierunku na prawo
            }
           
            // Wygaszenie wszystkich diod
            PTWY = 0xFF;
           
            // Wlaczenie diody na odpowiedniej pozycji
            PTWY = 1 << led_position;
        }
    }
}

void INWERSJAP1_6() {
    // Mozesz zostawic te funkcje tak jak jest, aby obsluzyc inwersje diody, jesli to potrzebne
}

void WAIT_10US(unsigned int wait) {
    wait = (wait * 10UL) / 11UL;
    while (--wait) _nop_();
}